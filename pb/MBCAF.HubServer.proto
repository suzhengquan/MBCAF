syntax = "proto2";
package MBCAF.HubServer;
import "MBCAF.Proto.proto";
option optimize_for = LITE_RUNTIME;
option java_package = "com.MBCAF.pb";
option java_outer_classname="HubServer";

message FileTransferQ
{
	required uint32 from_user_id = 1;
	required uint32 to_user_id = 2;
	required string file_name = 3;
	required uint32 file_size = 4;
	required MBCAF.Proto.TransferFileType trans_mode = 5;
	optional bytes attach_data = 17;
}

message FileTransferA
{
	required uint32 result_code = 1;
	required uint32 from_user_id = 2;
	required uint32 to_user_id = 3;
	optional string file_name = 4;
	optional uint32 file_size = 5;
	optional string task_id = 6;
	optional MBCAF.Proto.TransferFileType trans_mode = 7;
	optional bytes attach_data = 17;
}

message FileServerQ
{
}

message FileServerA
{
	repeated MBCAF.Proto.IPAddress ip_addr_list = 1;
}

message FileLoginQ
{
	required uint32 user_id = 1;
	required string task_id = 2;
	required MBCAF.Proto.ClientTransferRole file_role= 3;
}

message FileLoginA
{
	required uint32 result_code = 1;
	required string task_id = 2;
}

message FileTransferState
{
	required MBCAF.Proto.TransferFileState state = 1;
	required string task_id = 2;
	required uint32 user_id = 3;
}

message FilePullQ
{
	required string task_id = 1;
	required uint32 user_id = 2;
	required MBCAF.Proto.TransferFileType trans_mode = 3;
	required uint32 offset = 4;
	required uint32 data_size = 5;
}

message FilePullA
{
	required uint32 result_code = 1;
	required string task_id = 2;
	required uint32 user_id = 3;
	required uint32 offset = 4;
	required bytes file_data = 5;
}

message FileQ
{
	required uint32 from_user_id = 1;
	required uint32 to_user_id = 2;
	required string file_name = 3;
	required uint32 file_size = 4;
	required MBCAF.Proto.TransferFileType trans_mode = 5;
}

message FileA
{
	required uint32	result_code = 1;
	required uint32 from_user_id = 2;
	required uint32 to_user_id = 3;
	required string file_name = 4;
	required string task_id = 5;
	repeated MBCAF.Proto.IPAddress ip_addr_list = 6;
	required MBCAF.Proto.TransferFileType trans_mode = 7;
}

message FileNotify
{
	required uint32 from_user_id = 1;
	required uint32 to_user_id = 2;
	required string file_name = 3;
	required uint32 file_size = 4;
	required string task_id = 5;
	repeated MBCAF.Proto.IPAddress ip_addr_list = 6;
	required MBCAF.Proto.TransferFileType trans_mode = 7;
	required uint32 offline_ready = 8;				//1:True 0:False
}

message FileExistOfflineQ
{
	required uint32 user_id = 1;
	optional bytes attach_data = 20;
}

message FileExistOfflineA
{
	required uint32 user_id = 1;
	repeated MBCAF.Proto.OfflineFileInfo offline_file_list = 2;
	repeated MBCAF.Proto.IPAddress ip_addr_list = 3;
	optional bytes attach_data = 20;
}

message FileAddOfflineQ
{
	required uint32 from_user_id = 1;
	required uint32 to_user_id = 2;
	required string task_id = 3;
	required string file_name = 4;
	required uint32 file_size = 5;
}

message FileDeleteOfflineQ
{
	required uint32 from_user_id = 1;
	required uint32 to_user_id = 2;
	required string task_id = 3;
}
