syntax = "proto2";
package MBCAF.Proto;
option optimize_for = LITE_RUNTIME;
option java_package = "com.MBCAF.pb";
option java_outer_classname="Proto";

enum MsgTypeID
{
    MTID_ServerBase                         = 1;
    MTID_MsgServer                          = 2;
    MTID_HubServer                          = 3;
    MTID_Count                              = 4;
}

enum ServerBaseMsgID
{
    SBID_ServerQ                            = 1;                    //
    SBID_ServerA                            = 2;                    //
    SBID_ObjectLoginQ                       = 3;                    //
    SBID_ObjectLoginA                       = 4;                    //
    SBID_ObjectLogoutQ                      = 5;                    //
    SBID_ObjectLogoutA                      = 6;                    //
    SBID_KickUser                           = 7;                    //
    SBID_TrayMsgQ                           = 8;                    //
    SBID_TrayMsgA                           = 9;                    //
    SBID_KickPCClientQ                      = 10;                   //
    SBID_KickPCClientA                      = 11;                   //
    SBID_PushShieldSQ                       = 12;                   //
    SBID_PushShieldSA                       = 13;                   //
    SBID_PushShieldQ                        = 14;                   //
    SBID_PushShieldA                        = 15;                   //
    SBID_P2P                                = 16;
    SBID_Heartbeat                          = 17;
    SBID_StopReceive                        = 18;
    SBID_UserLoginValidQ                    = 19;
    SBID_UserLoginValidA                    = 20;
    SBID_SwitchTrayMsgQ                     = 21;
    SBID_SwitchTrayMsgA                     = 22;
    SBID_ServerPrimaryS                     = 23;
    SBID_ObjectInfo                         = 24;
    SBID_ServerInfo                         = 25;
    SBID_ObjectInfoS                        = 26;
    SBID_ConnectNotify                      = 27;
    SBID_ServerKickObject                   = 28;
    SBID_LoginStateNotify                   = 29;
    SBID_UserPushQ                          = 30;
    SBID_UserPushA                          = 31;
    SBID_GroupShieldQ                       = 32;
    SBID_GroupShieldA                       = 33;
    SBID_FileTransferQ                      = 34;
    SBID_FileTransferA                      = 35;
    SBID_FileServerQ                        = 36;
    SBID_FileServerA                        = 37;
}

enum MsgServerMsgID
{
    MSID_GroupListQ                         = 1;
    MSID_GroupListA                         = 2;
    MSID_GroupInfoQ                         = 3;
    MSID_GroupInfoA                         = 4;
    MSID_CreateGroupQ                       = 5;
    MSID_CreateGroupA                       = 6;
    MSID_GroupMemberSQ                      = 7;
    MSID_GroupMemberSA                      = 8;
    MSID_GroupShieldSQ                      = 9;
    MSID_GroupShieldSA                      = 10;
    MSID_GroupMemberNotify                  = 11;
    MSID_BubbyRecentSessionQ                = 12;
    MSID_BubbyRecentSessionA                = 13;
    MSID_BubbyLoginStateNotify              = 14;                   //
    MSID_BuddyPCLoginStateNotify            = 15;
    MSID_BubbyObjectInfoQ                   = 16;                   //
    MSID_BubbyObjectInfoA                   = 17;
    MSID_BubbyRemoveSessionQ                = 18;
    MSID_BubbyRemoveSessionA                = 19;
    MSID_BuddyObjectListQ                   = 20;
    MSID_BuddyObjectListA                   = 21;
    MSID_BuddyObjectStateQ                  = 22;
    MSID_BuddyObjectStateA                  = 23;
    MSID_BuddyAvatarQ                       = 24;
    MSID_BuddyAvatarA                       = 25;
    MSID_BuddyAvatarNotify                  = 26;
    MSID_BuddyRemoveSessionS                = 27;
    MSID_BuddyOrganizationQ                 = 28;
    MSID_BuddyOrganizationA                 = 29;
    MSID_BuddyChangeSignatureQ              = 30;
    MSID_BuddyChangeSignatureA              = 31;
    MSID_BuddyObjectStateS                  = 32;
    MSID_Data                               = 33;
    MSID_DataACK                            = 34;
    MSID_ReadACK                            = 35;
    MSID_ReadNotify                         = 36;
    MSID_TimeQ                              = 37;
    MSID_TimeA                              = 38;
    MSID_UnReadCountQ                       = 39;
    MSID_UnReadCountA                       = 40;
    MSID_MsgListQ                           = 41;
    MSID_MsgListA                           = 42;
    MSID_RecentMsgQ                         = 43;
    MSID_RecentMsgA                         = 44;
    MSID_MsgQ                               = 45;
    MSID_MsgA                               = 46;
}

enum HubServerMsgID
{
    HSID_LoginQ                             = 1;
    HSID_LoginA                             = 2;
    HSID_FileState                          = 3;
    HSID_PullQ                              = 4;
    HSID_PullA                              = 5;

    HSID_FileQ                              = 6;
    HSID_FileA                              = 7;
    HSID_FileNotify                         = 8;
    HSID_OfflineFileQ                       = 9;
    HSID_OfflineFileA                       = 10;
    HSID_AddOfflineFileQ                    = 11;
    HSID_DeleteOfflineFileQ                 = 12;
}

enum ResultType
{
    RT_OK                                   = 0;
    RT_NoServer                             = 1;
    RT_ServerBusy                           = 2;
    RT_NoInfoServer                         = 3;
    RT_NoDataBaseServer                     = 4;
    RT_NoLoginServer                        = 5;
    RT_NoRouteServer                        = 6;
    RT_NoValidateFail                       = 7;
    RT_NoVersionFail                        = 8;
}

enum KickReasonType
{
    KRT_Repeat                              = 1;
    KRT_Mobile                              = 2;
    KRT_Manual                              = 3;
}

enum ObjectStateType
{
    OST_Game_Online                         = 1;
    OST_Online                              = 2;
    OST_Offline                             = 3;
    OST_Leave                               = 4;
}

enum SessionType
{
    ST_Single                               = 1;
    ST_Group                                = 2;
}

enum MessageType
{
    MT_Text                                 = 0x01;
    MT_Audio                                = 0x02;
    MT_GroupText                            = 0x11;
    MT_GroupAudio                           = 0x12;
}

enum ClientType
{
    CT_Win32                                = 0x01;
    CT_MAC                                  = 0x02;
    CT_IOS                                  = 0x11;
    CT_Android                              = 0x12;
    CT_Http                                 = 0x21;
}

enum GroupType
{
    GROUP_TYPE_NORMAL                       = 0x01;
    GROUP_TYPE_TMP                          = 0x02;
}

enum GroupModifyType
{
    GMT_Add                                 = 0x01;
    GMT_delete                              = 0x02;
}

enum TransferFileType
{
    TFT_Online                              = 0x01;
    TFT_Offline                             = 0x02;
}

enum TransferFileState
{
    TFS_PeerReady                           = 0x00;
    TFS_Cancel                              = 0x01;
    TFS_Refuse                              = 0x02;
    TFS_Done                                = 0x03;
}

enum ClientTransferRole
{
    CTR_OnlineSender                        = 0x01;
    CTR_OnlineRecver                        = 0x02;
    CTR_OfflineSender                       = 0x03;
    CTR_OfflineRecver                       = 0x04;
}

enum SessionStateType
{
    SST_Create								= 0x00;
    SST_Delete                              = 0x01;
}

enum DepartmentStateType
{
    DST_Create								= 0x00;
    DST_Delete								= 0x01;
}

enum OrganizationStateType
{
    OST_Create								= 0x00;
	OST_Restrict							= 0x01;
	OST_Cancellation						= 0x02;
    OST_Delete								= 0x03;
}

message IPAddress
{
    required string ip                      = 1;
    required uint32 port                    = 2;
}

message UserInfo
{
    required uint32 user_id                 = 1;
    required uint32 user_gender             = 2;
    required string user_nick_name          = 3;
    required string avatar_url              = 4;
    required uint32 department_id           = 5;
    required string email                   = 6;
    required string user_real_name          = 7;
    required string user_tel                = 8;
    required string user_domain             = 9;
    required uint32 status                  = 10;
    optional string sign_info               = 11;
}

message ContactSessionInfo
{
    required uint32 session_id                  = 1;
    required SessionType session_type           = 2;
    required SessionStateType session_status    = 3;
    required uint32 updated_time                = 4;
    required uint32 latest_msg_id               = 5;
    required bytes latest_msg_data              = 6;
    required MessageType latest_msg_type        = 7;
    required uint32 latest_msg_from_user_id     = 8;
}

message ObjectState
{
    required uint32 user_id = 1;
    required ObjectStateType status = 2;
}

message ServerObjectState
{
    required uint32 user_id = 1;
    required ObjectStateType status = 2;
    required ClientType client_type = 3;
}

message UnreadInfo
{
    required uint32 session_id = 1;
    required SessionType session_type = 2;
    required uint32 unread_cnt = 3;
    required uint32 latest_msg_id = 4;
    required bytes latest_msg_data = 5;
    required MessageType latest_msg_type = 6;
    required uint32 latest_msg_from_user_id = 7;        //userid who send the msg
}

message MsgInfo
{
    required uint32 msg_id = 1;
    required uint32 from_session_id = 2;
    required uint32 create_time = 3;
    required MessageType msg_type = 4;
    required bytes msg_data = 5;
}

message GroupVersionInfo
{
    required uint32 group_id = 1;
    required uint32 version = 2;
    
}

message GroupInfo
{
    required uint32 group_id = 1;
    required uint32 version = 2;
    required string group_name = 3;
    required string group_avatar = 4;
    required uint32 group_creator_id = 5;
    required GroupType group_type = 6;
    required uint32 shield_status = 7;
    repeated uint32 group_member_list = 8;
}

message UserTokenInfo
{
    required uint32 user_id = 1;
    required ClientType user_type = 2;
    required string token = 3;
    required uint32 push_count = 4;
    required uint32 push_type = 5;
}

message PushResult
{
    required string user_token = 1;
    required uint32 result_code = 2;
}

message ShieldStatus
{
    required uint32 user_id = 1;        
    required uint32 group_id = 2;    
    required uint32 shield_status = 3;
}

message OfflineFileInfo
{
    required uint32 from_user_id = 1;
    required string task_id = 2;
    required string file_name = 3;
    required uint32 file_size = 4;
}

message OrgInfo
{
    required uint32 org_id = 1;
    required uint32 priority = 2;
    required string org_name = 3;
    required uint32 parent_org_id = 4;
    required OrganizationStateType org_status = 5;
}

message DepartInfo
{
    required uint32 dept_id = 1;
    required uint32 priority = 2;
    required string dept_name = 3;
    required uint32 parent_dept_id = 4;
    required DepartmentStateType dept_status = 5;
}

message PushShieldStatus
{
    required uint32 user_id = 1;
    required uint32 shield_status = 2;
}